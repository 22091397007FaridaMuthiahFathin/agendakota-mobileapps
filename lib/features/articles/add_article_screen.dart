import 'package:flutter/material.dart';
import 'package:flutter_markdown/flutter_markdown.dart';
import '../../services/api_service.dart';
import '../../models/article.dart';
import '../../models/category.dart';
import '../../models/author.dart';

class AddArticleScreen extends StatefulWidget {
  @override
  _AddArticleScreenState createState() => _AddArticleScreenState();
}

class _AddArticleScreenState extends State<AddArticleScreen> {
  final ApiService apiService = ApiService();
  final TextEditingController titleController = TextEditingController();
  final TextEditingController contentController = TextEditingController();
  final TextEditingController slugController = TextEditingController();

  Author? selectedAuthor;
  Category? selectedCategory;
  List<Author> authors = [];
  List<Category> categories = [];

  @override
  void initState() {
    super.initState();
    _fetchAuthorsAndCategories();
  }

  // Fetch authors and categories from API
  void _fetchAuthorsAndCategories() async {
    final fetchedAuthors = await apiService.fetchAuthors();
    final fetchedCategories = await apiService.fetchCategories();
    setState(() {
      authors = fetchedAuthors;
      categories = fetchedCategories;
    });
    print('Authors: $authors');
    print('Categories: $categories');
  }

  // Generate slug based on title
  void _updateSlug() {
    slugController.text = titleController.text.replaceAll(" ", "-").toLowerCase();
  }

  void _submit() async {
    final newArticle = Article(
      id: 0, // ID will be generated by Strapi
      documentId: '',
      title: titleController.text,
      slug: slugController.text,
      content: contentController.text,
      author: selectedAuthor,
      category: selectedCategory,
    );

    try {
      await apiService.addArticle(newArticle);
      Navigator.pop(context);
    } catch (e) {
      print('Full error response: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Gagal menambahkan artikel: $e')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Tambah Artikel')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              TextField(
                controller: titleController,
                decoration: InputDecoration(labelText: 'Judul'),
                onChanged: (value) => _updateSlug(),
              ),
              TextField(
                controller: slugController,
                decoration: InputDecoration(labelText: 'Slug'),
              ),
              SizedBox(height: 20),

              // Markdown editor for content
              TextField(
                controller: contentController,
                decoration: InputDecoration(
                  labelText: 'Konten (Markdown)',
                  hintText: 'Gunakan Markdown untuk format konten...',
                ),
                maxLines: 10,
              ),
              SizedBox(height: 20),

              // Dropdown for selecting author
              DropdownButtonFormField<Author>(
                value: selectedAuthor,
                hint: Text('Pilih Penulis'),
                items: authors.map((author) {
                  return DropdownMenuItem(
                    value: author,
                    child: Text(author.name),
                  );
                }).toList(),
                onChanged: (value) {
                  setState(() {
                    selectedAuthor = value;
                  });
                },
              ),
              SizedBox(height: 20),

              // Dropdown for selecting category
              DropdownButtonFormField<Category>(
                value: selectedCategory,
                hint: Text('Pilih Kategori'),
                items: categories.map((category) {
                  return DropdownMenuItem(
                    value: category,
                    child: Text(category.name),
                  );
                }).toList(),
                onChanged: (value) {
                  setState(() {
                    selectedCategory = value;
                  });
                },
              ),
              SizedBox(height: 20),

              ElevatedButton(
                onPressed: _submit,
                child: Text('Simpan Artikel'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
